plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-fabric-" + project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://maven.parchmentmc.org" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.bai.lol" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    //maven {
    //    url = "https://modmaven.dev/"
    //}
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://jitpack.io" } // Fabric ASM, Mixin Extras
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" } // Cardinal Components API
    maven { url = "https://api.modrinth.com/maven" }
    flatDir { dir 'libs' }
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

// Include resources generated by data generators.
sourceSets {
    main.resources.srcDirs += "src/generated/resources"
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    
    //modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    //modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    
    modImplementation "maven.modrinth:kiwi:VnB53KXO"
    //modImplementation "maven.modrinth:porting_lib:jmo0BwfL"
    modImplementation "io.github.fabricators_of_create.Porting-Lib:base:${project.port_lib_version}+${project.minecraft_version}"
    modImplementation "io.github.fabricators_of_create.Porting-Lib:common:${project.port_lib_version}+${project.minecraft_version}"
    modImplementation "io.github.fabricators_of_create.Porting-Lib:extensions:${project.port_lib_version}+${project.minecraft_version}"
    //modImplementation "curse.maven:the-twilight-forest-227639:4086723"
    implementation "com.electronwill.night-config:core:3.6.3"
    implementation "com.electronwill.night-config:toml:3.6.3"
    //modImplementation "curse.maven:forge-config-api-port-fabric-547434:4104948"
    modImplementation "maven.modrinth:forge-config-api-port:tlNCwMwZ"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
    //modImplementation "com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}"
    modImplementation "maven.modrinth:here-be-no-dragons:1.0.0"
    //modImplementation "libs:Kiwi-1.18.1-fabric:${project.kiwi_version}"
}

loom {
    mixin {
        defaultRefmapName = "${project.mod_id}.refmap.json"
    }
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude '**/*.bat'
    /*
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
    */
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            //artifact(sourcesJar) {
            //  builtBy remapSourcesJar
            //}
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN") // This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
    projectId = "4w0EzGRW" // This can be the project ID or the slug. Either will work!
    versionNumber = project.mod_version // You don't need to set this manually. Will fail if Modrinth has this version already
    versionType = "release" // This is the default -- can also be `beta` or `alpha`
    uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.19.3"] // Must be an array, even with only one version
    loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    dependencies { // A special DSL for creating dependencies
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.project "fabric-api"
        optional.project "kiwi"
        optional.project "cloth-config"
    }
}
